name: Infra Setup E2E

on:
  workflow_dispatch: {}

permissions:
  id-token: write   # REQUIRED for OIDC authentication
  contents: read    # needed so checkout can read repo code

env:
  ARTEFACTS_BUCKET_NAME: notes-app-serverless-artefacts-648378716943
  AWS_REGION: eu-west-2

jobs:

  bootstrap:
    name: Bootstrap
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/bootstrap

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply (auto-approve)
        run: terraform apply -auto-approve
  
  config-auth0:
    name: Config Auth0
    needs: [bootstrap]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/auth0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
        
      - name: Fetch secrets from aws secrets manager
        uses: ./.github/actions/fetch-secrets
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws_region: ${{ env.AWS_REGION }}
          secret_id: notes-app-serverless/auth0/pipeline-config

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply (auto-approve)
        run: terraform apply -auto-approve

  deploy-environment:
    name: Deploy environment
    needs: [config-auth0]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply (auto-approve)
        run: terraform apply -auto-approve

  build-and-publish-artefacts:
    name: Build and Publish Artefacts
    needs: [deploy-environment]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    outputs:
      zip_file_name: ${{ steps.package.outputs.zip_file_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Install Dependencies
        run: npm install --omit=dev

      - name: Package Backend
        id: package
        run: |
          DATE=$(date +%Y%m%d)
          SHA=$(git rev-parse --short HEAD)
          ZIP_FILE="backend-${DATE}-${SHA}.zip"
          zip -r /tmp/$ZIP_FILE . -x "node_modules/aws-sdk/*"
          echo "ZIP_FILE_NAME=$ZIP_FILE" >> $GITHUB_ENV
          echo "zip_file_name=$ZIP_FILE" >> $GITHUB_OUTPUT

      - name: Upload artefact to S3
        run: |
          echo "Uploading /tmp/$ZIP_FILE_NAME to s3://${{ env.ARTEFACTS_BUCKET_NAME }}/lambda/"
          aws s3 cp /tmp/$ZIP_FILE_NAME s3://${{ env.ARTEFACTS_BUCKET_NAME }}/lambda/$ZIP_FILE_NAME
          echo "s3_key=lambda/$ZIP_FILE_NAME" >> $GITHUB_OUTPUT

  deploy-application:
    name: Deploy Application
    needs: [build-and-publish-artefacts]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/application

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="lambda_s3_key=lambda/${{ needs.build-and-publish-artefacts.outputs.zip_file_name }}" 

      - name: Terraform Apply (auto-approve)
        run: terraform apply -var="lambda_s3_key=lambda/${{ needs.build-and-publish-artefacts.outputs.zip_file_name }}" -auto-approve
